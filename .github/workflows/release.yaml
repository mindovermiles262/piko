name: Create release

on:
  pull_request:
  # push:
  #   tags:
  #     - "v*"

env:
  # GH_TAG: ${{github.ref_name}}
  GH_TAG: "v0.0.0"

permissions:
  contents: write

jobs:
  docker-containers:
    # https://docs.github.com/en/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions#upgrading-a-workflow-that-accesses-a-registry-using-a-personal-access-token
    name: Build & Publish Docker Containers
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Build container images
        run: build/docker-build.sh $GH_TAG


  # build-release-binaries:
  #   name: Build Relase Binaries
  #   runs-on: ubuntu-latest
  #   steps:
  #     # https://github.com/actions/checkout
  #     - uses: actions/checkout@v4
  #     # Build the binaries using the `build/artifacts.sh` script in the repo
  #     - name: Build Artifacts
  #       run: build/artifacts.sh $GH_TAG
  #     # https://github.com/marketplace/actions/upload-a-build-artifact
  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: binaries
  #         path: bin/artifacts/

  # update-helm-chart-version:
  #   name: Update Helm Chart Version
  #   runs-on: ubuntu-latest
  #   steps:
  #     # https://github.com/actions/checkout
  #     - uses: actions/checkout@v4
  #     - name: Update Chart
  #       run: |
  #         CAPTURE_GROUP="appVersion:\ \"v[0-9]\+\.[0-9]\+\.[0-9]\+\""
  #         REPLACEMENT="appVersion\:\ \"$GH_TAG\""
  #         echo "Updating Piko Helm Chart to Version $GH_TAG"
  #         sed -i'' "s/$CAPTURE_GROUP/$REPLACEMENT/" $GITHUB_WORKSPACE/operations/helm/piko/Chart.yaml
  #         git config user.name "github-actions[bot]"
  #         git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
  #         git commit -am "[bot] bump helm chart to version $GH_TAG"
  #         git push origin HEAD:main

  # release:
  #   name: Release
  #   runs-on: ubuntu-latest
  #   needs: [build-release-binaries]
  #   steps:
  #     # https://github.com/actions/checkout
  #     - uses: actions/checkout@v4
  #     # https://github.com/actions/download-artifact
  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: binaries
  #         path: bin/artifacts/
  #     - name: Create Release
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: build/release.sh $GH_TAG

